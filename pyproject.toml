
[build-system]
requires = ["poetry-core>=1.0.0", "pybind11>=2.12.0",  "pybind11[global]>=2.12.0"]	# "setuptools>=68.0.0",
build-backend = "poetry.core.masonry.api"


[tool.poetry.group.dev.dependencies]
Pygments = ">=2.10.0"
bandit = ">=1.7.4"
black = ">=21.10b0"
coverage = {extras = ["toml"], version = ">=6.2"}
darglint = ">=1.8.1"
flake8 = ">=4.0.1"
flake8-docstrings = ">=1.6.0"
flake8-rst-docstrings = ">=0.2.5"
furo = ">=2021.11.12"
isort = ">=5.10.1"
mypy = ">=0.930"
pep8-naming = ">=0.12.1"
pre-commit = ">=2.16.0"
pytest = ">=6.2.5"
pyupgrade = ">=2.29.1"
safety = ">=1.10.3"
sphinx = ">=4.3.2"
sphinx-autobuild = ">=2021.3.14"
sphinx-click = ">=3.0.2"
typeguard = ">=2.13.3"
xdoctest = {extras = ["colors"], version = ">=0.15.10"}
myst-parser = {version = ">=0.16.1"}
sphinxcontrib-napoleon = ">=0.7"
ruff = "^0.12.0"
pre-commit-hooks = "^5.0.0"

[project]
name = "pyxcp"
dynamic = ["license", "readme", "authors", "requires-python", "description", "classifiers", "scripts", "dependencies", "optional-dependencies"]

[tool.poetry]
authors = ["Christoph Schueler <cpu.gems@googlemail.com>"]
name = "pyxcp"
version = "0.23.2"
readme = "README.md"
description = "Universal Calibration Protocol for Python"
keywords = ["automotive", "ecu", "xcp", "asam", "autosar"]
homepage = "https://github.com/christoph2/pyxcp"
license = "LGPLv3"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers", "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
	"Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
build = "build_ext.py"
include = [
    { path = "pyxcp/cpp_ext/*.so", format = "wheel" },
    { path = "pyxcp/cpp_ext/*.pyd", format = "wheel" },
    { path = "pyxcp/daq_stim/*.so", format = "wheel" },
    { path = "pyxcp/daq_stim/*.pyd", format = "wheel" },
    { path = "pyxcp/recorder/*.so", format = "wheel" },
    { path = "pyxcp/recorder/*.pyd", format = "wheel" },
    { path = "pyxcp/*.exe", format = "wheel" },
    { path = "CMakeLists.txt", format = "sdist" },

	{ path = "pyxcp/cpp_ext/*hpp", format = "sdist" },
	{ path = "pyxcp/cpp_ext/*cpp", format = "sdist" },
	{ path = "pyxcp/daq_stim/*hpp", format = "sdist" },
	{ path = "pyxcp/daq_stim/*cpp", format = "sdist" },
	{ path = "pyxcp/recorder/*hpp", format = "sdist" },
	{ path = "pyxcp/recorder/*cpp", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.10"
construct = "^2.10.68"
mako = "^1.2.4"
pyserial = "^3.5"
pyusb = "^1.2.1"
python-can = "^4.2.2"
uptime = "^3.0.1"
rich = "^14.0.0"
chardet = "^5.2.0"
traitlets = "<=5.11.2"
line-profiler-pycharm = "^1.1.0"
toml = "^0.10.2"
bandit = "^1.7.8"
tomlkit = "^0.13.3"
pytz = "^2025.2"

[tool.poetry.scripts]
pyxcp-probe-can-drivers = "pyxcp.scripts.pyxcp_probe_can_drivers:main"
xcp-id-scanner = "pyxcp.scripts.xcp_id_scanner:main"
xcp-fetch-a2l = "pyxcp.scripts.xcp_fetch_a2l:main"
xcp-info = "pyxcp.scripts.xcp_info:main"
xcp-profile = "pyxcp.scripts.xcp_profile:main"
xcp-examples = "pyxcp.scripts.xcp_examples:main"
xmraw-converter = "pyxcp.scripts.xmraw_converter:main"

[tool.pytest]
addopts = "--verbose --tb=short --junitxml=result.xml -o junit_family=xunit2"
testpaths = "pyxcp/tests"

[tool.isort]
profile = "black"
force_single_line = false
lines_after_imports = 2

[tool.mypy]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[tool.flake8]
ignore = ["D203", "E203", "E266", "E501", "W503", "F403", "F401", "BLK100"]
exclude = '''
/(
    \.git
    | __pycache__
    | __pypackages__
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.eggs
    | _build
    | build
    | docs
    | dist
    | experimental
)/
'''
max-complexity = 10
count = true
statistics = true
show-source = true
max-line-length = 132
select = ["B","C","E","F","W","T4","B9"]
# extend-select = "B950"
extend-ignore = ["E203", "E501", "E701"]

[tool.ruff]
line-length = 132

[tool.black]
line-length=132
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | build
    | docs
    | experimental
    | __pycache__
    | __pypackages__
    | dist
)/
'''

[tool.cibuildwheel]
build-verbosity = 3
#test-command = "pya2l {package}/tests"

build = "cp3{10,11,12,13,14}-*"
skip = ["*_i686", "*-musllinux*"]
build-frontend = "build"

[tool.pyright]
include = ["pyxcp", "build_ext.py"]
ignore = ["pyxcp/recorder/converter/**", "pyxcp/recorder/simdjson/**","pyxcp/recorder/mio/**", "pyxcp/recorder/lz4/**"]
#defineConstant = { DEBUG = true }
#stubPath = "src/stubs"

reportMissingImports = true
reportMissingTypeStubs = false

#executionEnvironments = [
#  { root = "src/web", pythonVersion = "3.5", pythonPlatform = "Windows", extraPaths = [ "src/service_libs" ] },
#  { root = "src/sdk", pythonVersion = "3.0", extraPaths = [ "src/backend" ] },
#  { root = "src/tests", extraPaths = ["src/tests/e2e", "src/sdk" ]},
#  { root = "src" }
#]
